openapi: 3.0.0
info:
  title: e-Commerce API Docs
  description: This is an experimental API design of commonly used REST API for an e-Commerce. <br> This API design is still full of uncompleted features/dummy data. Make sure to review the code before cloning/using it for your own project. <br><br> To access admin protected routes, log in with this credential:<br><br> `email:super.admin@gmail.com`<br><br>`password:supersecret`
  version: "1.0"
servers:
  - url: https://e-commerce-api-docs.herokuapp.com/api/v1
paths:
  /auth/logout:
    get:
      tags:
        - auth
      summary: Log Out User
      operationId: LogOutUser
      responses:
        "200":
          description: successful operation
        "500":
          description: unexpected error
  /auth/login:
    post:
      tags:
        - auth
      summary: Log In User
      operationId: LogInUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogInUser"
            example:
              email: john.doe@gmail.com
              password: thesecret
        required: true
      responses:
        "200":
          description: succesful operation
        "400":
          description: invalid credentials
        "401":
          description: invalid password
        "404":
          description: email not found
        "500":
          description: unexpected error
  /auth/register:
    post:
      tags:
        - auth
      summary: Register User
      operationId: RegisterUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUser"
            example:
              name: John Doe
              email: john.doe@gmail.com
              password: thesecret
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: email is already registered
        "500":
          description: unexpected error
  /users:
    get:
      tags:
        - user
      summary: Get All Users
      operationId: GetAllUsers
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access
        "500":
          description: unexpected error
  /users/getCurrentUser:
    get:
      tags:
        - user
      summary: Get Current User
      operationId: GetCurrentUser
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
  /users/updateUserProfile:
    patch:
      tags:
        - user
      summary: Update User Profile
      operationId: UpdateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfile"
            example:
              name: Jane Doe
              email: jane.doe@gmail.com
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: invalid credentials
        "401":
          description: invalid password
  /users/updateUserPassword:
    patch:
      tags:
        - user
      summary: Update User Password
      operationId: UpdateUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPassword"
            example:
              oldPassword: thesecret
              newPassword: onlysecret
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: null input supplied
        "401":
          description: invalid password
  /users/{id}:
    get:
      tags:
        - user
      summary: Get Single User
      operationId: GetSingleUser
      parameters:
        - name: id
          in: path
          description: The user ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "404":
          description: user not found
  /products:
    get:
      tags:
        - product
      summary: Get All Products
      operationId: GetAllProducts
      responses:
        "200":
          description: successful operation
    post:
      tags:
        - product
      summary: Create Product
      operationId: CreateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProduct"
            example:
              name: emperor bed
              price: 23999
              description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
              image: https://dl.airtable.com/.attachmentThumbnails/0446e84c5bca9643de3452a61b2d6195/1b32f48b
              category: bedroom
              company: ikea
              colors:
                - "#0000ff"
                - "#000"
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access. reserved for admin
  /products/uploadImage:
    post:
      tags:
        - product
      summary: Upload Image
      operationId: UploadImage
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access. reserved for admin
  /products/{id}:
    parameters:
      - name: id
        in: path
        description: The product ID
        required: true
        schema:
          type: string
    get:
      tags:
        - product
      summary: Get Single Product
      operationId: GetSingleProduct
      responses:
        "200":
          description: successful operation
        "404":
          description: product not found
    patch:
      tags:
        - product
      summary: Update Product
      operationId: UpdateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProduct"
            example:
              name: accent chair
              price: 15999
              description: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access. reserved for admin
        "404":
          description: product not found
    delete:
      tags:
        - product
      summary: Delete Product
      operationId: DeleteProduct
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access. reserved for admin
  /products/{id}/reviews:
    get:
      tags:
        - product
      summary: Get Single Product Reviews
      operationId: GetSingleProductReviews
      parameters:
        - name: id
          in: path
          description: The product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "404":
          description: product not found
  /reviews:
    get:
      tags:
        - review
      summary: Get All Reviews
      operationId: GetAllReviews
      responses:
        "200":
          description: successful operation
    post:
      tags:
        - review
      summary: Create Review
      operationId: CreateReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReview"
            example:
              title: Super comfy. Great for backpain!
              rating: 4
              comment: It ease up and relieve my backpain a lot. Definitely worth the price.
              product: 62a37f66ea6bfcf12484abeb
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: user already reviewed
        "401":
          description: invalid token supplied
        "404":
          description: product to be reviewed was not found
  /reviews/{id}:
    parameters:
      - name: id
        in: path
        description: The review ID
        required: true
        schema:
          type: string
    get:
      tags:
        - review
      summary: Get Single Review
      operationId: GetSingleReview
      responses:
        "200":
          description: successful operation
        "404":
          description: review not found
    patch:
      tags:
        - review
      summary: Update Review
      operationId: UpdateReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReview"
            example:
              title: Its good but ain't durable
              rating: 3
              comment: I buy it around 1 month ago. At first it helps me a lot with my backpain but lately it make some 'cricket sound' that may indicate some part is already broken.
        required: true
      responses:
        "200":
          description: successful operation
        "403":
          description: restricted access
        "404":
          description: review not found
    delete:
      tags:
        - review
      summary: Delete Review
      operationId: DeleteReview
      responses:
        "200":
          description: successful operation
        "403":
          description: restricted access
        "404":
          description: review not found
  /orders:
    get:
      tags:
        - order
      summary: Get All Orders
      operationId: GetAllOrders
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access. reserved for admin
    post:
      tags:
        - order
      summary: Create Order
      operationId: CreateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrder"
            example:
              tax: 499
              shippingFee: 799
              items:
                - name: accent chair
                  price: 15999
                  image: https://dl.airtable.com/.attachmentThumbnails/e8bc3791196535af65f40e36993b9e1f/438bd160
                  amount: 3
                  product: 62a37f66ea6bfcf12484abeb
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: invalid input supplied
        "401":
          description: invalid token supplied
        "404":
          description: product not found
  /orders/getCurrentUserOrders:
    get:
      tags:
        - order
      summary: Get Current User Orders
      operationId: GetCurrentUserOrders
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "404":
          description: order not found
  /orders/{id}:
    parameters:
      - name: id
        in: path
        description: The order ID
        required: true
        schema:
          type: string
    get:
      tags:
        - order
      summary: Get Single Order
      operationId: GetSingleOrder
      responses:
        "200":
          description: order does not exist
        "401":
          description: invalid token supplied
        "403":
          description: restricted access
        "404":
          description: order not found
    patch:
      tags:
        - order
      summary: Update Status Order
      operationId: UpdateStatusOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStatusOrder"
            example:
              paymentIntentID: paidUsingFakeStripePaymentIntentID
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: invalid token supplied
        "403":
          description: restricted access
        "404":
          description: order does not exist
components:
  schemas:
    LogInUser:
      title: Log In User Request
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    RegisterUser:
      title: Register User Request
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UpdateUserProfile:
      title: Update User Profile Request
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    UpdateUserPassword:
      title: Update User Password Request
      required:
        - oldPassword
        - newPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
    CreateProduct:
      title: Create Product Request
      required:
        - name
        - price
        - description
        - image
        - category
        - company
        - colors
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
        description:
          type: string
        image:
          type: string
        category:
          type: string
        company:
          type: string
        colors:
          type: array
          items:
            type: string
          description: ""
    UpdateProduct:
      title: Update Product Request
      required:
        - name
        - price
        - description
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
        description:
          type: string
    CreateReview:
      title: Create Review Request
      required:
        - title
        - rating
        - comment
        - product
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
        comment:
          type: string
        product:
          type: string
    UpdateReview:
      title: Update Review Request
      required:
        - title
        - rating
        - comment
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
        comment:
          type: string
    CreateOrder:
      title: Create Order Request
      required:
        - tax
        - shippingFee
        - items
      type: object
      properties:
        tax:
          type: integer
        shippingFee:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/SingleItemOrder"
          description: ""
    SingleItemOrder:
      title: Single Item Order
      required:
        - name
        - price
        - image
        - amount
        - product
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
        image:
          type: string
        amount:
          type: integer
        product:
          type: string
    UpdateStatusOrder:
      title: Update Status Order Request
      required:
        - paymentIntentID
      type: object
      properties:
        paymentIntentID:
          type: string
tags:
  - name: auth
  - name: user
  - name: product
  - name: review
  - name: order
